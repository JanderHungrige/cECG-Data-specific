% QA_TO_UNIX_TIME_SECONDS   Convert a string to unix epoch time.
%
%   Computes the number of seconds elapsed since 1-jan-1970 (unix epoch)
%   given a timestamp as a ISO 8601 formatted string.
%
function unix_epoch = qa_to_unix_time_seconds(str)

  % Validate argument
  if ~(isa(str, 'char') && isvector(str))
    error('Argument must be a vector of class char.');
  end
  
  % Invoke external utility
  [ path, ~, ~ ] = fileparts(mfilename('fullpath'));  
  [status, cmdout] = dos(sprintf('"%s\\TimeConverter.exe" "%s"', path, str));
  
  % Check results
  if (status == 0)
    unix_epoch = str2num(sprintf('int64(%s)', cmdout));
  else
    error('Failed to convert time representation.');
  end
  
	% -------------------------------------8<-------------------------------------
  
  % Direct invokation of .NET assemblies do not work (yet) as MATLAB fails
  % to load .NET runtime v4.6.2.
  
  % Valid formats
  %valid_formats = {
  %  'yyyy-MM-ddTHH:mm:sszzz'          ; ...
  %  'yyyy-MM-ddTHH:mm:ss.fzzz'        ; ...
  %  'yyyy-MM-ddTHH:mm:ss.ffzzz'       ; ...
  %  'yyyy-MM-ddTHH:mm:ss.fffzzz'      ; ...
  %  'yyyy-MM-ddTHH:mm:ss.ffffzzz'     ; ...
  %  'yyyy-MM-ddTHH:mm:ss.fffffffzzz'  ; ...
  %  'yyyy-MM-ddTHH:mm:ss.ffffffffzzz' ; ...
  %  'yyyy-MM-ddTHH:mm:ssZ'            ; ...
  %  'yyyy-MM-ddTHH:mm:ss.fZ'          ; ...
  %  'yyyy-MM-ddTHH:mm:ss.ffZ'         ; ...
  %  'yyyy-MM-ddTHH:mm:ss.fffZ'        ; ...
  %  'yyyy-MM-ddTHH:mm:ss.ffffZ'       ; ...
  %  'yyyy-MM-ddTHH:mm:ss.fffffffZ'    ; ...
  %  'yyyy-MM-ddTHH:mm:ss.ffffffffZ'   };

  % Call .NET conversion functions
  %unix_epoch = System.DateTimeOffset.ParseExact(str(:).', valid_formats, ...
  %                System.Globalization.CultureInfo.InvariantCulture, ...
  %                System.Globalization.DateTimeStyles.AssumeUniversal) ...
  %                    .ToUnixTimeSeconds();
                
end   % end function